@startuml
class Winner << (F,#FF7700) Facade >> {
    + {static} makeBill(barcodeOrWritableLine : string) : Bill
    + {static} isValidBarcode(code : string) : boolean
    + {static} isValidWritableLine(line : string) : boolean
}

class BillFactory {
    + make(barcodeOrWritableLine : string) : Bill
    + load(class : string) : void
    + getBills() : string[]
}

interface Converter {
    + toBarcode(bill : Bill) : string
    + toWritableLine(bill : Bill) : string
}

interface Validator {
    + checkWritableLine(bill : Bill) : boolean
    + checkBarcode(bill : Bill) : boolean
}

abstract Bill {
    # writableLine : string
    # barcode : string
    - converter : Converter
    - validator : Validator
    __
    + setBarcode(code : string) : Bill
    + setWritableLine(line : string) : Bill
    ..
    + getBarcode(): string
    + getWritableLine() : string
    ..
    + {abstract} isWritableLineValid() : bool
    + {abstract} isBarcodeValid() : bool
    # {abstract} barcodeToWritableLine() : void
    # {abstract} writableLineToBarcode() : void
}

Winner --> BillFactory

BillFactory --> Bill

Bill <|-- Boleto
Bill <|-- Convenio

Bill -> Converter
Bill -> Validator

Converter <|-- BoletoConverter
Converter <|-- ConvenioConverter

Validator <|-- BoletoValidator
Validator <|-- ConvenioValidator

@enduml
